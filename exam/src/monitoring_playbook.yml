---
- name: Install Monitoring Stack (Prometheus, Loki, Grafana, and Dashboards)
  hosts: localhost
  tasks:
    - name: Create namespace for monitoring
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: monitoring

    - name: Add Helm repository for Prometheus
      community.kubernetes.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts

    - name: Add Helm repository for Grafana and Loki
      community.kubernetes.helm_repository:
        name: grafana
        repo_url: https://grafana.github.io/helm-charts

    - name: Update Helm repositories
      ansible.builtin.command: helm repo update

    - name: Install Prometheus for monitoring pods and nodes
      community.kubernetes.helm:
        chart_ref: prometheus-community/kube-prometheus-stack
        release_name: prometheus
        namespace: monitoring
        create_namespace: true
        values: {}

    - name: Install Loki and Promtail for collecting logs
      community.kubernetes.helm:
        chart_ref: grafana/loki-stack
        release_name: loki
        namespace: monitoring
        values:
          promtail:
            enabled: true
            config:
              snippets: {}
    
    - name: Install Grafana
      community.kubernetes.helm:
        chart_ref: grafana/grafana
        release_name: grafana
        namespace: monitoring
        values:
          adminPassword: 'admin'

    - name: Wait for Grafana pod to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: monitoring
        labels:
          app.kubernetes.io/name: grafana
      register: grafana_pods

    - name: Wait for 30 seconds to ensure Grafana service is available
      ansible.builtin.pause:
        seconds: 30

    - name: Forward Grafana port
      ansible.builtin.command: kubectl port-forward svc/grafana 3000:80 -n monitoring
      async: 600
      poll: 0
      register: port_forward_result

    - name: Get Grafana session cookies for authentication
      uri:
        url: "http://localhost:3000/login"
        method: POST
        body: "user=admin&password=admin"
        body_format: form-urlencoded
        return_content: yes
      register: grafana_login
