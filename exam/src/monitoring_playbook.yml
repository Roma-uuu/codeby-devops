---
- hosts: localhost
  gather_facts: yes
  tasks:
    - name: Create namespace for monitoring
      kubernetes.core.k8s:
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"  # Указан путь к вашему kubeconfig
        state: present
        definition:
          kind: Namespace
          apiVersion: v1
          metadata:
            name: monitoring

    - name: Add Helm repository for Prometheus
      community.kubernetes.helm_repository:
        name: prometheus-community
        repo_url: https://prometheus-community.github.io/helm-charts
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"  # Добавляем kubeconfig для корректной работы

    - name: Add Helm repository for Grafana and Loki
      community.kubernetes.helm_repository:
        name: grafana
        repo_url: https://grafana.github.io/helm-charts
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"

    - name: Update Helm repositories
      community.kubernetes.helm:
        name: helm
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"
        command: repo update

    - name: Install Prometheus for monitoring pods and nodes
      community.kubernetes.helm:
        name: prometheus
        chart_ref: prometheus-community/prometheus
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"
        release_namespace: monitoring
        release_state: present
        values: {}

    - name: Install Loki and Promtail for collecting logs
      community.kubernetes.helm:
        name: loki
        chart_ref: grafana/loki-stack
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"
        release_namespace: monitoring
        release_state: present
        values: {}

    - name: Install Grafana
      community.kubernetes.helm:
        name: grafana
        chart_ref: grafana/grafana
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"
        release_namespace: monitoring
        release_state: present
        values: {}

    - name: Wait for Grafana pod to be ready
      kubernetes.core.k8s_info:
        kubeconfig: "/home/rsshabanov/codeby-devops/exam/src/kubeconfig-jenkins.yaml"
        kind: Pod
        namespace: monitoring
        label_selectors:
          - "app.kubernetes.io/name=grafana"
      register: grafana_pods
      until: grafana_pods.resources | length > 0
      retries: 10
      delay: 30

    - name: Wait for 30 seconds to ensure Grafana service is available
      wait_for:
        timeout: 30

    - name: Get Grafana session cookies for authentication
      uri:
        url: "http://192.168.49.2:32000/login"
        method: POST
        body: "{\"user\":\"admin\", \"password\":\"admin\"}"
        headers:
          Content-Type: "application/json"
        return_content: yes
        status_code: 200
      register: grafana_auth

    - name: Add Prometheus as Grafana data source (if not exists)
      uri:
        url: "http://192.168.49.2:32000/api/datasources"
        method: POST
        headers:
          Content-Type: "application/json"
          Cookie: "{{ grafana_auth.set_cookie }}"
        body: |
          {
            "name": "Prometheus",
            "type": "prometheus",
            "url": "http://prometheus-server.monitoring.svc.cluster.local",
            "access": "proxy",
            "isDefault": true
          }
        status_code: [200, 409]  # 409 означает, что datasource уже существует
      register: prometheus_ds

    - name: Update Prometheus as Grafana data source if exists
      uri:
        url: "http://192.168.49.2:32000/api/datasources/name/Prometheus"
        method: PUT
        headers:
          Content-Type: "application/json"
          Cookie: "{{ grafana_auth.set_cookie }}"
        body: |
          {
            "name": "Prometheus",
            "type": "prometheus",
            "url": "http://prometheus-server.monitoring.svc.cluster.local",
            "access": "proxy",
            "isDefault": true
          }
        when: prometheus_ds.status == 409

    - name: Add Loki as Grafana data source via Grafana API
      uri:
        url: "http://192.168.49.2:32000/api/datasources"
        method: POST
        headers:
          Content-Type: "application/json"
          Cookie: "{{ grafana_auth.set_cookie }}"
        body: |
          {
            "name": "Loki",
            "type": "loki",
            "url": "http://loki.monitoring.svc.cluster.local",
            "access": "proxy",
            "isDefault": false
          }
        status_code: [200, 409]
