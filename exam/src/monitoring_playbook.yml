---
- name: Install Monitoring Stack (Prometheus, Loki, Grafana, and Dashboards)
  hosts: localhost
  tasks:
    - name: Create namespace for monitoring
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: monitoring
      register: ns_monitoring

    - name: Add Helm repository for Prometheus
      shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

    - name: Add Helm repository for Grafana and Loki
      shell: helm repo add grafana https://grafana.github.io/helm-charts

    - name: Update Helm repositories
      shell: helm repo update

    - name: Install Prometheus for monitoring pods and nodes
      shell: helm install prometheus prometheus-community/prometheus --namespace monitoring

    - name: Install Loki and Promtail for collecting logs
      shell: helm install loki grafana/loki-stack --namespace monitoring

    - name: Install Grafana
      shell: helm install grafana grafana/grafana --namespace monitoring

    - name: Wait for Grafana pod to be ready
      kubernetes.core.k8s_info:
        api_version: v1
        kind: Pod
        namespace: monitoring
        label_selectors:
          - app.kubernetes.io/name=grafana
        wait: yes
        timeout: 600

    - name: Wait for 30 seconds to ensure Grafana service is available
      pause:
        seconds: 30

    - name: Get Grafana session cookies for authentication
      uri:
        url: "http://{{ grafana_host }}:{{ grafana_port }}/api/health"
        headers:
          Authorization: "Bearer {{ grafana_token }}"
        method: GET
      register: grafana_session

    - name: Add Prometheus as Grafana data source (if not exists)
      uri:
        url: "http://{{ grafana_host }}:{{ grafana_port }}/api/datasources"
        headers:
          Authorization: "Bearer {{ grafana_token }}"
        method: POST
        body_format: json
        body:
          name: Prometheus
          type: prometheus
          url: http://prometheus-server.monitoring.svc.cluster.local
          access: proxy
          basicAuth: false
      register: prometheus_add

    - name: Update Prometheus as Grafana data source if exists
      uri:
        url: "http://{{ grafana_host }}:{{ grafana_port }}/api/datasources/name/Prometheus"
        headers:
          Authorization: "Bearer {{ grafana_token }}"
        method: PUT
        body_format: json
        body:
          url: http://prometheus-server.monitoring.svc.cluster.local
          access: proxy
          basicAuth: false
      when: prometheus_add.json.message == 'Data source with same name already exists'
