pipeline {
    agent any

    environment {
        IMAGE_NAME = "apkerigz/devops"
        IMAGE_TAG = 'v.0.0.44'
        MANIFEST_PATH = 'exam/src/k8s'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'exam', url: 'https://github.com/Roma-uuu/codeby-devops.git'
            }
        }
        stage('Build') {
            steps {
                dir('exam/src') {
                    sh 'mvn clean package'
                }
            }
        }
        stage('Test Docker Access') {
            steps {
                sh 'docker info'
            }
        }
        stage('Build and Push Docker Image') {
            steps {
                dir('exam/src') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-credentials', usernameVariable: 'DOCKERHUB_USERNAME', passwordVariable: 'DOCKERHUB_TOKEN')]) {
                        sh '''
                        echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
                        docker build -t $IMAGE_NAME:$IMAGE_TAG .
                        docker push $IMAGE_NAME:$IMAGE_TAG
                        '''
                    }
                }
            }
        }
        stage('Verify Files') {
            steps {
                sh 'ls -la $MANIFEST_PATH'
            }
        }
        stage('Test Kubernetes Connection') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh 'kubectl cluster-info'
                    sh 'kubectl get nodes'
                }
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                withCredentials([file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG')]) {
                    sh 'kubectl apply -f $MANIFEST_PATH/deployment.yaml'
                    sh 'kubectl apply -f $MANIFEST_PATH/service.yaml'
                }
            }
        }
    }
}
